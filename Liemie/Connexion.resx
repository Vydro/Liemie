<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>